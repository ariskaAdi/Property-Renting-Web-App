
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  role: 'role',
  full_name: 'full_name',
  email: 'email',
  password_hash: 'password_hash',
  profile_picture: 'profile_picture',
  is_verified: 'is_verified',
  verify_otp: 'verify_otp',
  reset_password_otp: 'reset_password_otp',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TenantsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  company_name: 'company_name',
  address: 'address',
  phone_number: 'phone_number',
  logo: 'logo',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PropertiesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  property_category: 'property_category',
  description: 'description',
  address: 'address',
  city: 'city',
  province: 'province',
  zip_code: 'zip_code',
  latitude: 'latitude',
  longitude: 'longitude',
  main_image: 'main_image',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Property_imagesScalarFieldEnum = {
  id: 'id',
  property_id: 'property_id',
  image_url: 'image_url',
  created_at: 'created_at'
};

exports.Prisma.RoomsScalarFieldEnum = {
  id: 'id',
  property_id: 'property_id',
  name: 'name',
  description: 'description',
  base_price: 'base_price',
  capacity: 'capacity',
  image: 'image',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Room_imagesScalarFieldEnum = {
  id: 'id',
  room_id: 'room_id',
  image_url: 'image_url',
  created_at: 'created_at'
};

exports.Prisma.Room_availabilityScalarFieldEnum = {
  id: 'id',
  room_id: 'room_id',
  date: 'date',
  is_available: 'is_available',
  price_override: 'price_override',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Peak_season_ratesScalarFieldEnum = {
  id: 'id',
  property_id: 'property_id',
  room_id: 'room_id',
  start_date: 'start_date',
  end_date: 'end_date',
  price_change_type: 'price_change_type',
  price_change_value: 'price_change_value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BookingsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  property_id: 'property_id',
  status: 'status',
  proof_image: 'proof_image',
  check_in_date: 'check_in_date',
  check_out_date: 'check_out_date',
  total_price: 'total_price',
  payment_deadline: 'payment_deadline',
  paid_at: 'paid_at',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Booking_roomsScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  room_id: 'room_id',
  guests_count: 'guests_count',
  price_per_night: 'price_per_night',
  nights: 'nights',
  subtotal: 'subtotal',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  user_id: 'user_id',
  property_id: 'property_id',
  comment: 'comment',
  tenant_reply: 'tenant_reply',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  tenant: 'tenant'
};

exports.PropertyCategory = exports.$Enums.PropertyCategory = {
  apartment: 'apartment',
  house: 'house',
  villa: 'villa',
  hotel: 'hotel',
  hostel: 'hostel',
  guesthouse: 'guesthouse'
};

exports.PriceChangeType = exports.$Enums.PriceChangeType = {
  percentage: 'percentage',
  nominal: 'nominal'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  waiting_payment: 'waiting_payment',
  waiting_confirmation: 'waiting_confirmation',
  confirmed: 'confirmed',
  canceled: 'canceled',
  expired: 'expired'
};

exports.Prisma.ModelName = {
  users: 'users',
  tenants: 'tenants',
  properties: 'properties',
  property_images: 'property_images',
  rooms: 'rooms',
  room_images: 'room_images',
  room_availability: 'room_availability',
  peak_season_rates: 'peak_season_rates',
  bookings: 'bookings',
  booking_rooms: 'booking_rooms',
  reviews: 'reviews'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
